{"version":3,"sources":["src/app/idealz/services/api/api.service.ts","src/app/idealz/services/common/common.service.ts","src/app/idealz/services/url/url.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpEventType, HttpHeaders } from \"@angular/common/http\";\r\nimport { UrlService } from \"../url/url.service\";\r\nimport { LoginBody } from \"../../requests/login-body\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { CommonService } from \"../common/common.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ApiService {\r\n  countryCode: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private url: UrlService,\r\n    private comm: CommonService\r\n  ) {\r\n    this.getCountryCode();\r\n  }\r\n\r\n  getCountryCode() {\r\n    return this.http\r\n      .get<Response>(\"assets/json/countryCode.json\")\r\n      .pipe(map(response => response));\r\n  }\r\n\r\n  singIn(body: LoginBody) {\r\n    return this.http.post(this.comm.baseUrl + \"/panel/login\", body);\r\n  }\r\n\r\n  sendToken(token: string) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.getToken() !== null;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrManager } from \"ng6-toastr-notifications\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CommonService {\r\n  orderStatus: string = \"pending\";\r\n  dropSetting = {\r\n    enableCheckAll: false,\r\n    singleSelection: false,\r\n    idField: \"_id\",\r\n    textField: \"name\",\r\n    selectAllText: \"Select All\",\r\n    unSelectAllText: \"UnSelect All\",\r\n    itemsShowLimit: 3,\r\n    allowSearchFilter: true\r\n  };\r\n  singleDropSetting = {\r\n    enableCheckAll: false,\r\n    singleSelection: true,\r\n    idField: \"_id\",\r\n    textField: \"name\",\r\n    selectAllText: \"Select All\",\r\n    unSelectAllText: \"UnSelect All\",\r\n    itemsShowLimit: 3,\r\n    allowSearchFilter: true\r\n  };\r\n  baseUrl = \"https://appgrowthcompany.com:3000/v1/admin\";\r\n  imageUrl = \"https://appgrowthcompany.com:3000\";\r\n  // https://appgrowthcompany.com:3000/\r\n  //http://192.168.1.98:3000\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toaster: ToastrManager,\r\n    // private api: ApiService,\r\n    private http: HttpClient\r\n  ) { }\r\n  showSpinner() {\r\n    this.spinner.show();\r\n  }\r\n  hideSpinner() {\r\n    this.spinner.hide();\r\n  }\r\n  successToast(message) {\r\n    this.toaster.successToastr(message, \"\", {\r\n      maxShown: 1\r\n    });\r\n  }\r\n  errorToast(message) {\r\n    this.toaster.errorToastr(message);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UrlService {\r\n  baseUrl = \"http://192.168.1.98:3000/v1/admin\";\r\n  imageUrl = \"http://192.168.1.98:3000\";\r\n\r\n  constructor() {}\r\n  login = `${this.baseUrl}/login`;\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}